@using Microsoft.AspNetCore.Identity;
@model IEnumerable<IdentityUser>
@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid bg-white p-4 mt-4">

    <div class="container">

        <div class="row py-3">
            <div class="col-4"> <h2>Usuarios</h2> </div>
            <div class="col-8 d-flex justify-content-end flex-nowrap">
                <a asp-area="Director" asp-controller="Menu" asp-action="Index" class="btn text-white bg-primary m-1"> <i class="fa-solid fa-arrow-left"></i> Volver</a>
                <a class="btn text-white bg-primary m-1" asp-area="Identity" asp-page="/Account/Register"><i class="fa-solid fa-plus"></i> Crear Nuevo Usuario</a>
            </div>
        </div>

        <div class="row shadow p-3 mb-5 bg-white rounded py-2">
            <div class="col-12">

                <table id="tblUsersAd" class="table table-striped table-bordered mp-custom-table">
                    <thead>
                        <tr style="background: #161E35 !important">
                            <th style="color:#ffffff !important">@Html.DisplayNameFor(m => m.UserName)</th>
                            <th style="color:#ffffff !important">@Html.DisplayNameFor(m => m.Email)</th>
                            <th style="color:#ffffff !important">@Html.DisplayNameFor(m => m.PhoneNumber)</th>
                            <th style="color:#ffffff !important">Accion</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(m => item.UserName)
                                </td>
                                <td>
                                    @Html.DisplayFor(m => item.Email)
                                </td>
                                <td>
                                    @Html.DisplayFor(m => item.PhoneNumber)
                                </td>

                                <td>
                                    @if (item.LockoutEnd == null || item.LockoutEnd < DateTime.Now)
                                    {
                                        <a class="btn btn-success" asp-action="Bloquear" style="width:50px;" asp-route-id="@item.Id">
                                            <i class="fas fa-lock-open"></i>
                                        </a>
                                    }
                                    else
                                    {
                                        <a class="btn btn-danger" asp-action="Desbloquear" style="width:50px;" asp-route-id="@item.Id">
                                            <i class="fas fa-lock"></i>
                                        </a>
                                    }
                                    <a class="btn text-white btn-danger" onclick="Delete('/Director/Usuario/Delete?idUser=@item.Id')">
                                        <i class="fa fa-trash"></i>
                                    </a>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>

            </div>
        </div>
    </div>
</div>


@*onclick="Delete('/Director/Usuario/Delete/?id=@item.Id')"*@
@section Scripts{
    <partial name="_ValidationScriptsPartial" />
    <script>
        var dataTable;

        $(document).ready(function () {
            cargarDatatable();
        });

        function cargarDatatable() {
            dataTable = $("#tblUsersAd").DataTable({
                "language": {
                    url: "../lib/DataTables/idioma/es-ES.json",
                    "emptyTable": "Ningún dato disponible en esta tabla",
                    "search": "Buscar:",
                    "paginate": {
                        "first": "Primero",
                        "last": "Último",
                        "next": "Siguiente",
                        "previous": "Anterior"
                    },
                    "info": "Mostrando _START_ a _END_ de _TOTAL_ registros",
                    "lengthMenu": "Mostrar _MENU_ registros",
                    "zeroRecords": "No se encontraron resultados",
                    "infoEmpty": "Mostrando registros del 0 al 0 de un total de 0 registros",
                    "infoFiltered": "(filtrado de un total de _MAX_ registros)",
                },
                "width": "100%"
            });
        }

        function Delete(url) {
            swal.fire({
                icon: 'error',
                iconColor: "#FF6565",
                title: "Esta seguro de borrar?",
                text: "Este contenido no se puede recuperar! ",
                showCancelButton: true,
                cancelButtonColor: "#17172b",
                confirmButtonColor: "#FF6565",
                confirmButtonText: "Si, borrar!"
            }).then((result) => {
                if (result.isConfirmed) {
                    $.ajax({
                        type: 'POST',
                        url: url,
                        success: function (data) {
                            if (data.success) {
                                const Toast = Swal.mixin({
                                    toast: true,
                                    position: 'bottom-end',
                                    showConfirmButton: false,
                                    timer: 2000,
                                    timerProgressBar: true,
                                    didOpen: (toast) => {
                                        toast.addEventListener('mouseenter', Swal.stopTimer)
                                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                                    }
                                })
                                Toast.fire({
                                    icon: 'success',
                                    title: data.message
                                })
                                //dataTable.ajax.reload();
                                location.reload();
                            }
                            else {
                                const Toast = Swal.mixin({
                                    toast: true,
                                    position: 'bottom-end',
                                    showConfirmButton: false,
                                    timer: 2000,
                                    timerProgressBar: true,
                                    didOpen: (toast) => {
                                        toast.addEventListener('mouseenter', Swal.stopTimer)
                                        toast.addEventListener('mouseleave', Swal.resumeTimer)
                                    }
                                })
                                Toast.fire({
                                    icon: 'error',
                                    title: data.message
                                })
                            }
                        }
                    });
                }
            });

        }

       
    </script>
}