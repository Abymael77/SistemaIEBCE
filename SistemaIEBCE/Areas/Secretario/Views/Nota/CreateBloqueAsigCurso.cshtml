@model SistemaIEBCE.Models.ViewModels.BloqueAsigCursoVM
@*@model System.Data.DataTable*@

@{
    ViewData["Title"] = "CreateBloqueAsigCurso";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var message = TempData["error"] ?? string.Empty;
}

<link href="~/css/chosen.css" rel="stylesheet" />
<link href="~/css/CreateForm.css" rel="stylesheet" />

@*create carpeta*@

<div class='box mt-5 container-sm justify-content-center'>
    <div class='box-form container-fluid mx-2'>
        <div class='box-login-tab'></div>
        <div class='box-login-title p-2 font-weight-bold text-primary'>
            <h2> <i class="fa-solid fa-swatchbook"></i> &nbsp;&nbsp;&nbsp; Crear</h2>
        </div>
        <div class='box-login container-fluid'>
            <div class='fieldset-body container-fluid' id='login_form'>

                <form class="my-4 container-fluid" method="post" asp-action="CreateBloqueAsigCurso">
                    <div class="row border">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        <div class="col-12 mt-4">

                            <div class="form-group row mt-3">
                                <label class="col-sm-2 col-form-label col-form-label-sm"></label>
                                <div class="col-10">
                                    <select class="form-control" asp-for="BloqueAsigCurso.IdAsigCurso">
                                        <option value="@ViewData["asig"]">@ViewData["asig"]</option>
                                    </select>
                                </div>
                            </div>


                            <div class="form-group row mt-3">
                                <label asp-for="BloqueAsigCurso.IdBloque" class="col-sm-2 col-form-label col-form-label-sm"></label>
                                <div class="col-10">
                                    @Html.DropDownListFor(m => m.BloqueAsigCurso.IdBloque, Model.ListaBloqueCrear,
                                   "-Porfavor seleccione una opción-", new { @class = "form-control", @id = "bloque" })

                                    @*<select class="form-control" asp-for="ListaBloqueCrear">
                                            @foreach (var item in Model.ListaBloqueCrear)
                                            {
                                                <option value="@item.Value">@item.Text</option>
                                            }
                                        </select>*@

                                </div>
                                <span asp-validation-for="BloqueAsigCurso.IdBloque" class="text-danger offset-2 col-10"></span>
                            </div>

                            <input asp-for="BloqueAsigCurso.Estado" value="@ViewData["IdCicloEscolar"]" hidden />

                            <div class="form-group row mt-3">
                                <div class="col-4 offset-4">
                                    <div class="row justify-content-center">
                                        <div class="m-2">
                                            <button type="submit" class="btn bg-primary text-light px-5 form-control">Crear</button>

                                        </div>
                                        <div class="m-2">
                                            <a href="/Secretario/Nota/Bloque/?IdAsigCurso=@ViewData["asig"]&IdCicloEscolar=@ViewData["IdCicloEscolar"]" class="btn btn-secondary px-5 form-control">Volver</a>
                                        </div>
                                    </div>
                                </div>
                            </div>

                        </div>
                    </div>
                </form>

            </div>
        </div>
        <input type='submit' id='do_login' value='' />
    </div>
</div>



@section Scripts{
    <script>
        $(document).ready(function () {
                var message = '@message';
                if (message) {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'bottom-end',
                        showConfirmButton: false,
                        timer: 2000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })
                    Toast.fire({
                        icon: 'error',
                        title: 'Error: ' + message
                    })
                }
            if (message == "dodo") {
                    const Toast = Swal.mixin({
                        toast: true,
                        position: 'bottom-end',
                        showConfirmButton: false,
                        timer: 2000,
                        timerProgressBar: true,
                        didOpen: (toast) => {
                            toast.addEventListener('mouseenter', Swal.stopTimer)
                            toast.addEventListener('mouseleave', Swal.resumeTimer)
                        }
                    })
                    Toast.fire({
                        icon: 'success',
                        title: 'Operación Exitosa '
                    })
                }
            });
    </script>

    <script src="~/js/Nota.js"></script>

    <script>
        $(document).ready(function () {
            cargarDatatable();
        });
    </script>

}



